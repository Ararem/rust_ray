[package]
name = "rust_ray"
version = "0.1.0"
edition = "2021"
authors = ["ararem <48875125+Ararem@users.noreply.github.com>"]
# description = ""
readme = "README.md"
license = "MIT OR Apache-2.0"  # https://spdx.org/licenses/
build = "build.rs" #file to run on build


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Helper/Dev-tool dependencies
shadow-rs = "0.19.0"
color-eyre = { version = "0.6.2", features = ["issue-url"] }
pretty_assertions = "1.3.0"
lazy_static = "1.4"
nameof = "1.2.2"
itertools = "0.10.5"
backtrace = { version = "0.3.67", features = ["serde", "cpp_demangle", "dbghelp"] }

# Tracing/logging
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.16", features = ["json", "env-filter", "fmt", "std"] }
tracing-error = { version = "0.2", features=["traced-error"] }

# Performance profiling
tracing-flame="0.2.0" # generates flamegraphs (inferno) from tracing spans
criterion = "0.4.0"

# Other
indoc = "1.0.7"
regex = "1.7"
fancy-regex = "0.10.0"
fs_extra = "1.2.0"
path-clean = "0.1.0"
slice-deque = "0.3.0" # Deque that can be mapped into a slice really easily
multiqueue2 = "0.1.7"
rand = "0.8.5"
humantime = "2.1.0"
serde = "1.0.151"
ron = "0.8.0"
mint = { version = "0.5.9", features=["serde"] }
throttle = "0.1.0"

# ImGUI dependencies
clipboard = "0.5"
glium = { version = "0.32.1", default-features = true }
imgui = { version = "0.9.0", features = ["docking", "tables-api"] }
imgui-glium-renderer = "0.9.0"
imgui-winit-support = "0.9.0"
winit = { version = "0.27.5", features=["serde"] }

# Raytracing-related deps
vek = "0.15.9"

[build-dependencies]
shadow-rs = "0.19.0" # Needs to run at build-time, so include as build dependency
fs_extra = "1.2.0"
glob = "0.3"

[profile.dev]
# No optimisation. Sloewr code but means nothing has been changed so we won't have issues debugging
opt-level = 0
# Checks our maths is good
overflow-checks = true
lto = false
# Fast compile time, not very optimised
codegen-units = 32
incremental = true
# Includes debug information in release builds. Necessary for profiling. Does not
# slow down the executable.
debug = true

[profile.release]
# Full optimisation
opt-level = 3
overflow-checks = false
# Enable link-time optimization, eliminates more code and inlines across crate boundaries.
# Default: false
lto = true
# Much slower compile time, but speeds up generated code (best optimisations)
codegen-units = 1
incremental = true
# Includes debug information in release builds. Necessary for profiling. Does not
# slow down the executable.
debug = true

[[bench]]
name = "test_benches"
harness = false